"""Update length of some string fields

Revision ID: 6a97cee3e67d
Revises: fafa75e5b468
Create Date: 2018-08-08 13:15:59.463465

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "6a97cee3e67d"
down_revision = "fafa75e5b468"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("members")
    op.drop_table("films")
    op.drop_table("facilities")
    op.drop_table("vehicles")
    op.drop_table("company")
    op.drop_table("books")
    op.drop_table("bookings")
    op.drop_table("movies")


# ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "movies",
        sa.Column("title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("director", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("year", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.create_table(
        "bookings",
        sa.Column("bookid", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("facid", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("memid", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "starttime", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column("slots", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "books", sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table(
        "company",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("age", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("address", sa.CHAR(length=50), autoincrement=False, nullable=True),
        sa.Column("salary", sa.REAL(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="company_pkey"),
    )
    op.create_table(
        "vehicles",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("wheels", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("color", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="vehicles_pkey"),
    )
    op.create_table(
        "facilities",
        sa.Column("facid", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("membercost", sa.NUMERIC(), autoincrement=False, nullable=False),
        sa.Column("guestcost", sa.NUMERIC(), autoincrement=False, nullable=False),
        sa.Column("initialoutlay", sa.NUMERIC(), autoincrement=False, nullable=False),
        sa.Column(
            "monthlymaintenance", sa.NUMERIC(), autoincrement=False, nullable=False
        ),
    )
    op.create_table(
        "films",
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("director", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("year", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_table(
        "members",
        sa.Column("memid", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "surname", sa.VARCHAR(length=200), autoincrement=False, nullable=False
        ),
        sa.Column(
            "firstname", sa.VARCHAR(length=200), autoincrement=False, nullable=False
        ),
        sa.Column(
            "address", sa.VARCHAR(length=300), autoincrement=False, nullable=False
        ),
        sa.Column("zipcode", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "telephone", sa.VARCHAR(length=20), autoincrement=False, nullable=False
        ),
        sa.Column("recommendedby", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "joindate", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
    )


# ### end Alembic commands ###
